/$model:
  get:
    tags:
      - $model
    summary: Query all fields of $model
    operationId: query
    produces:
      - application/json
    parameters:
      - in: query
        name: criteria
        description: Filter and parameters to apply
        required: false
        type: string
    responses:
      "200":
        description: List of objects that match
        schema:
          type: array
          items:
            $ref: "#/definitions/$model"
      "400":
        description: Error
    security:
      - apiKey: []
  post:
    tags:
      - $model
    summary: Create new $model
    operationId: create
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: body
        name: body
        description: $model object to be added
        required: true
        schema:
          $ref: "#/definitions/$model"
    responses:
      "201":
        description: Object created
        schema:
          $ref: "#/definitions/$model"
    security:
      - apiKey: []
/$model/{id}:
  get:
    tags:
      - $model
    summary: Get a $model object for update
    operationId: get
    produces:
      - application/json
    parameters:
      - in: path
        name: id
        description: Id of $model collection that needs to be fetched
        required: true
        type: string
    responses:
      "200":
        description: Object found
        schema:
          $ref: "#/definitions/$model"
      "404":
        description: Object not found
    security:
      - apiKey: []
  put:
    tags:
      - $model
    summary: Update $model
    operationId: update
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: path
        name: id
        description: Id of the $model that needs to be updated
        required: true
        type: string
      - in: body
        name: body
        description: $model object to be updated
        required: true
        schema:
          $ref: "#/definitions/$model"
    responses:
      "200":
        description: Successful updated
        schema:
          $ref: "#/definitions/$model"
      "404":
          description: >
            Document not found. The id is incorrect, it could have
            been deleted or updated by another user or process
    security:
      - apiKey: []
  delete:
    tags:
      - $model
    summary: Delete a $model object
    operationId: delete
    produces:
      - application/json
    parameters:
      - in: path
        name: id
        description: $model id to delete
        required: true
        type: string
    responses:
      "200":
        description: Object deleted
        schema:
          $ref: "#/definitions/$model"
      "404":
        description: Object not found
    security:
      - apiKey: []
